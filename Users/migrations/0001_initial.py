# Generated by Django 4.0.6 on 2022-07-13 09:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('Documents', '0001_initial'),
        ('Grades', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseCode', models.CharField(max_length=6)),
                ('courseName', models.CharField(default='None', max_length=1000)),
                ('coursephoto', models.ImageField(default='media/5398.jpg', upload_to='media/')),
                ('noOfStudents', models.IntegerField(blank=True)),
                ('courseStart', models.DateField(blank=True)),
                ('courseEnd', models.DateField(blank=True)),
                ('coursePeriod', models.CharField(choices=[('SUMMER', 'SUMMER'), ('SPRING', 'SPRING'), ('FALL', 'FALL'), ('WINTER', 'WINTER')], default='SUMMER', max_length=6)),
                ('semester', models.IntegerField(default=1)),
                ('documentsList', models.ManyToManyField(blank=True, to='Documents.docs')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('entryNo', models.CharField(max_length=12, unique=True)),
                ('profilephoto', models.ImageField(default='media/profile.png', upload_to='media/')),
                ('email', models.EmailField(max_length=500, unique=True)),
                ('password', models.CharField(max_length=500)),
                ('fullname', models.CharField(max_length=250)),
                ('about', models.CharField(blank=True, max_length=1000)),
                ('programme', models.CharField(choices=[('DUAL', 'DUAL (B.Tech + M.Tech)'), ('UG', 'Undergraduate'), ('PG', 'Post-Graduate'), ('PHD', 'PHD.'), ('STAFF', 'STAFF')], default='UG', max_length=7)),
                ('department', models.CharField(choices=[('Computer Sci', 'Computer Science'), ('Maths', 'Maths'), ('Electrical', 'Electrical'), ('Mechanical', 'Mechanical'), ('Physics', 'Physics'), ('Textile', 'Textile'), ('Biotech', 'Biotech'), ('Applied Mechanics', 'Applied Mechanics')], default='Maths', max_length=20)),
                ('year', models.IntegerField(default=0)),
                ('dateJoined', models.DateField(default=django.utils.timezone.now)),
                ('is_student', models.BooleanField(default=False)),
                ('is_instructor', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('member_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('Users.member',),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('instructor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Users.instructor')),
            ],
            options={
                'abstract': False,
            },
            bases=('Users.instructor',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('member_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('group', models.CharField(default='0', max_length=3)),
                ('allAssignments', models.ManyToManyField(blank=True, to='Grades.assignment')),
            ],
            options={
                'abstract': False,
            },
            bases=('Users.member',),
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(choices=[('0', 'No Grade'), ('13', 'X / Project, PHD. Contd.'), ('12', 'Z / Course Contd.'), ('11', 'S / Satisfactory'), ('10', 'A'), ('9', 'A-'), ('8', 'B'), ('7', 'B-'), ('6', 'C'), ('5', 'C-'), ('4', 'D'), ('3', 'D-'), ('2', 'E'), ('1', 'E-'), ('-6', 'F'), ('-1', 'NP / AUDIT PASS'), ('-2', 'NF / AUDIT FAIL'), ('-3', 'I / INCOMPLETE'), ('-4', 'W / WITHDRAWAL'), ('-5', 'U / UNSATISFACTORY')], default='No Grade', max_length=2)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.student')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='instructorList',
            field=models.ManyToManyField(blank=True, to='Users.instructor'),
        ),
        migrations.AddField(
            model_name='course',
            name='studentList',
            field=models.ManyToManyField(blank=True, to='Users.student'),
        ),
    ]
